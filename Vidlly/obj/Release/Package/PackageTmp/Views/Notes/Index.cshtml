@using Microsoft.AspNet.Identity
@using PagedList.Mvc
@model Vidlly.ViewModels.NoteViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<div class="container">
    <div class="row">
        <div class="col-md-6 note" > 

            <div class="form-group">
                <input class="form-control noteTitle" placeholder = "Title" />
                <div class="error-mes-title"></div>
            </div>
            <div class="form-note">
                <textarea class="form-control noteDes" rows="6" style="min-width: 100%"></textarea>
                <div class="error-mes-des"></div>
            </div>
            <div class="text-right" style="margin-top: 20px;">
                <button type="submit" class="btn btn-success save">Save</button>
            </div>
            <div id="userId" hidden="hidden" data-user=@User.Identity.GetUserId()></div>
        </div>

    </div>
</div>
<hr/>
<div class="margin-top-md">
    <h2 class="section-title">My Notes</h2>
    <ul class="row col-md-6" id="my-notes">
        @foreach (var nte in Model.Notes)
        {
        <li class="note margin-top-md" data-id=@nte.Id >

            <div class="form-group placeholderTitle">
                <div class="text-right">
                    <button class="btn btn-danger delete-note" type="submit">Delete</button>
                    <button class="btn btn-default edit-note">Edit</button>
                </div>

                <input class="form-control OnoteTitle" type="text" value="@nte.Title" readonly />
            </div>
            <div class="form-note">
                <textarea class="form-control OnoteDes no-fild" rows="6" style="min-width: 100%; resize: none" readonly>@nte.Description </textarea>
            </div>
            <div class="text-right" style="margin-top: 15px;">
                <button type="submit" class="btn btn-success update  hide">Update</button>
            </div>
        </li>

        }
    </ul>
    <div style="bottom: 0vh; position: fixed;">
        @Html.PagedListPager(Model.Notes, page => Url.Action("Index", new { page, pageSize = Model.Pagesize }))
    </div>
</div>


@section scripts
{

    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function() {

            $(".save").on("click",
                function (e) {

                    if ($(".noteTitle").val() !== '' && $(".noteDes").val() !== '') {

                      

                        var date = new Date();
                        var currentnote = $(e.target).parents(".note");

                        var userid = currentnote.find("#userId").data("user");

                        $.ajax({
                            type: "POST",
                            url: "/api/notes/",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({
                                title: $(".noteTitle").val(),
                                description: $(".noteDes").val(),
                                createTime: date.toISOString(),
                                userId: userid
                    }),
                            success: function (result) {
                                $(".noteTitle, .noteDes").val('');
                                $(`
                                <li class="note" data-id=${result.id}>
                                    <div class="text-right">
                                        <button class="btn btn-danger delete-note">Delete</button>
                                        <button class="btn btn-default edit-note" type="submit">Edit</button>
                                    </div>
                                    <div class="form-group">
                                        <input class="form-control OnoteTitle" type="text" value=${result.title} readonly/>
                                        <div class="error-mes-des"></div>
                                    </div>
                                    <div class="form-note">
                                        <textarea class="form-control OnoteDes no-fild" rows="6" style="min-width: 100%; resize: none" readonly >${result.description}</textarea>
                                    </div>
                                    <div class="text-right" style="margin-top: 15px;">
                                        <button type="submit" class="btn btn-success update hide">Update</button>
                                    </div>
                                </li>
                        `).prependTo("#my-notes").hide().slideDown();
                            },
                            error: function(error) {
                                console.log(error);
                            }
                        });

                    } else {
                        $(".error-mes-title").html('<span class="text-danger" >Title is Required</span>');
                        $(".error-mes-des").html('<span class="text-danger" >Description is Require</span>');
                    }
                });


            $("#my-notes").on("click", ".delete-note", function  (e) {

                var butn = $(e.target).parents("li");

                bootbox.confirm({
                    message: "Sure to delete the note",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/notes/" + butn.data("id"),
                                method: "DELETE",
                                success: () => {
                                    butn.slideUp();
                                },
                                error: (e) => {
                                    console.log(e);
                                }
                            });
                        }
                    }
                });
            });

            $("#my-notes").on("click", ".edit-note", function (e) {
                var currentNote = $(e.target).parents("li");

                makeEditable(currentNote);

            });


            $("#my-notes").on("click", ".update", function (e) {

                var currentNote = $(e.target).parents("li");
                var titleVal = currentNote.find(".OnoteTitle").val();
                var desVal = currentNote.find(".OnoteDes").val();
                    $.ajax({
                        url: "/api/notes/" + currentNote.data("id"),
                        type: 'PUT',   
                        data: {
                            title: titleVal,
                            description: desVal
                        },
                        success: () => {
                            makeReadonly(currentNote);
                        },
                        error: () => {
                            confirm("weferror");
                        }
                });

            });

            $('.OnoteDes, .OnoteTitle').on('input change', function () {
                if ($(this).val() !== '') {
                    $('.update').prop('disabled', false);
                }
                else {
                    $('.update').prop('disabled', true);
                }
            });

            function makeEditable(note) {
                note.find(".update").removeClass("hide");
                note.find(".delete-note").addClass("hide");
                note.find(".edit-note").attr("disabled","disabled");
                note.find(".OnoteTitle").removeAttr("readonly");
                note.find(".OnoteDes").removeAttr("readonly");
            }

            function makeReadonly(note) {
                note.find(".update").addClass("hide");
                note.find(".delete-note").removeClass("hide");
                note.find(".edit-note").removeAttr("disabled");
                note.find(".OnoteTitle").attr("readonly","readonly");
                note.find(".OnoteDes").attr("readonly","readonly");
            }


        });


    </script>
}
